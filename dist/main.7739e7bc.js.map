{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/scenes/Level1Scene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","LEVEL1","Scene","LoadScene","Phaser","key","load","image","spritesheet","frameWidth","frameHeight","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","scene","start","MenuScene","playIcon","sprite","setVisible","playButton","setInteractive","Level1Scene","levelWidth","player","stars","bombs","platforms","cursors","score","gameOver","scoreText","gameOverIcon","gameOverTimer","escKey","lastInput","waitForInputRelease","i","cameras","main","setBounds","physics","world","staticGroup","create","setBounceX","setBounceY","setCollideWorldBounds","startFollow","anims","frames","generateFrameNumbers","end","frameRate","repeat","frame","input","keyboard","createCursorKeys","group","setXY","x","y","stepX","children","iterate","child","Math","FloatBetween","text","fontSize","fill","collider","overlap","collectStar","hitBomb","addKey","Input","Keyboard","KeyCodes","ESC","isDown","gameIsOver","leftClick","activePointer","position","left","rightClick","right","setVelocityX","play","body","touching","down","setVelocityY","star","disableBody","setText","countActive","enableBody","Between","bomb","setBounce","setVelocity","allowGravity","pause","setTint","roundHalf","num","round","graphicsSettings","best","medium","low","DPR","window","devicePixelRatio","screen","WIDTH","max","HEIGHT","min","assetsDPR","console","log","config","type","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","default","arcade","gravity","debug","Game"],"mappings":"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","file":"main.7739e7bc.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        LEVEL1: \"LEVEL1\"\r\n    }\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        });\r\n    }\r\n\r\n    init() {\r\n        \r\n    }\r\n\r\n    preload() {\r\n        this.load.image('sky', './assets/sky.png');\r\n        this.load.image('ground', './assets/ground.png');\r\n        this.load.image('platform', './assets/platform.png');\r\n        this.load.image('star', './assets/star.png');\r\n        this.load.image('bomb', './assets/bomb.png');\r\n\r\n        this.load.image('play_button', './assets/play_button.png');\r\n        this.load.image('play_icon', './assets/play_icon.png');\r\n        this.load.image('game_over', './assets/game_over.png');\r\n\r\n        this.load.spritesheet('dude', '../assets/dude.png', { frameWidth: 32, frameHeight: 48 });\r\n        \r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // white\r\n            }\r\n        });\r\n\r\n        // simulate large load: TODO: remove\r\n        //for(let i = 0; i < 100; i++) {\r\n        //    this.load.image('star' + i, './src/assets/star.png');\r\n        //}\r\n        \r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n        });\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        });\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        //  A simple background for our game\r\n        this.add.image(640, 360, 'sky');\r\n        this.add.image(32, 32, 'star'); // logo\r\n        this.add.image(64, 32, 'star'); // logo\r\n\r\n        let playIcon = this.add.sprite(300, 400, 'play_icon');\r\n        playIcon.setVisible(false);\r\n\r\n        // use as play button...\r\n        let playButton = this.add.image(400, 400, 'play_button');\r\n\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            this.scene.start(CST.SCENES.LEVEL1);\r\n        });\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            playIcon.setVisible(true);\r\n        });\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            playIcon.setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    update () {\r\n        \r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class Level1Scene extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LEVEL1\r\n        });\r\n\r\n        this.levelWidth = 10;\r\n\r\n        this.player;\r\n        this.stars;\r\n        this.bombs;\r\n        this.platforms;\r\n        this.cursors;\r\n        this.score = 0;\r\n        this.gameOver = false;\r\n        this.scoreText;\r\n        this.gameOverIcon;\r\n        this.gameOverTimer = 0;\r\n        this.escKey;\r\n\r\n        this.lastInput = 0;\r\n        this.waitForInputRelease = false;\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.add.image(640 + (1280 * i), 360,\"sky\");\r\n        }\r\n        \r\n        this.cameras.main.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n        this.physics.world.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n\r\n        //  The platforms group contains the ground and the 2 ledges we can jump on\r\n        this.platforms = this.physics.add.staticGroup();\r\n\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.platforms.create(640 + (1280 * i), 704, \"ground\");\r\n        }\r\n        \r\n        //  Now let's create some ledges\r\n        this.platforms.create(600, 400, 'platform');\r\n        this.platforms.create(50, 250, 'platform');\r\n        this.platforms.create(750, 220, 'platform');\r\n\r\n        // The player and its settings\r\n        this.player = this.physics.add.sprite(100, 450, 'dude');\r\n        \r\n        //  Player physics properties. Give the little guy a slight bounce.\r\n        this.player.setBounceX(0);\r\n        this.player.setBounceY(0.2);\r\n        this.player.setCollideWorldBounds(true);\r\n\r\n        //this.cameras.main.startFollow(this.player, true, 0.05, 0.05);\r\n        this.cameras.main.startFollow(this.player, false, 1, 0);\r\n\r\n        //  Our player animations, turning, walking left and walking right.\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'turn',\r\n            frames: [ { key: 'dude', frame: 4 } ],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        //  Input Events\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        //  Some stars to collect, 12 in total, evenly spaced 70 pixels apart along the x axis\r\n        this.stars = this.physics.add.group({\r\n            key: 'star',\r\n            repeat: 11,\r\n            setXY: { x: 12, y: 0, stepX: 70 }\r\n        });\r\n\r\n        this.stars.children.iterate(function (child) {\r\n\r\n            //  Give each star a slightly different bounce\r\n            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\r\n\r\n        });\r\n\r\n        this.bombs = this.physics.add.group();\r\n\r\n        //  The score\r\n        this.scoreText = this.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });\r\n\r\n        //  Collide the player and the stars with the platforms\r\n        this.physics.add.collider(this.player, this.platforms);\r\n        this.physics.add.collider(this.stars, this.platforms);\r\n        this.physics.add.collider(this.bombs, this.platforms);\r\n\r\n        //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function\r\n        this.physics.add.overlap(this.player, this.stars, this.collectStar, null, this);\r\n\r\n        this.physics.add.collider(this.player, this.bombs, this.hitBomb, null, this);\r\n\r\n        this.gameOverIcon = this.physics.add.sprite(300, 300, 'game_over');\r\n        this.gameOverIcon.setVisible(false);\r\n        this.gameOver = false;\r\n\r\n        this.escKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);\r\n    }\r\n\r\n    update () {\r\n        if (this.escKey.isDown) {\r\n            this.gameIsOver();\r\n        }\r\n        if (this.gameOver) {\r\n            this.gameOverTimer++;\r\n            if (this.gameOverTimer > 150) {\r\n                this.scene.start(CST.SCENES.MENU);\r\n            }\r\n            return;\r\n        } else {\r\n            this.gameOverTimer = 0;\r\n        }\r\n\r\n        /* if (this.cursors.left.isDown) {\r\n            this.player.setVelocityX(-160);\r\n            this.player.anims.play('left', true);\r\n        }\r\n        else if (this.cursors.right.isDown) {\r\n            this.player.setVelocityX(160);\r\n            this.player.anims.play('right', true);\r\n        }\r\n        else {\r\n            this.player.setVelocityX(0);\r\n            this.player.anims.play('turn');\r\n        } */\r\n\r\n        var leftClick = (this.input.activePointer.isDown && (this.input.activePointer.position.x < 100)) || this.cursors.left.isDown;\r\n        var rightClick = (this.input.activePointer.isDown && (this.input.activePointer.position.x > 1180)) || this.cursors.right.isDown;\r\n        \r\n        if (leftClick && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 1) {\r\n                this.player.setVelocityX(-160);\r\n                this.player.anims.play('left', true);\r\n            } else if (this.lastInput == 1) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 1;\r\n            this.waitForInputRelease = true;\r\n            \r\n        } else if (rightClick && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 2) {\r\n                this.player.setVelocityX(160);\r\n                this.player.anims.play('right', true);\r\n            } else if (this.lastInput == 2) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 2;\r\n            this.waitForInputRelease = true;\r\n        } else {\r\n            //this.player.setVelocityX(0);\r\n            //this.player.anims.play('turn');\r\n        }\r\n\r\n        if (!(leftClick || rightClick)) {\r\n            this.waitForInputRelease = false;\r\n        }\r\n    }\r\n\r\n    collectStar (player, star) {\r\n        star.disableBody(true, true);\r\n\r\n        //  Add and update the score\r\n        this.score += 10;\r\n        this.scoreText.setText('Score: ' + this.score);\r\n\r\n        if (this.stars.countActive(true) === 0) {\r\n            //  A new batch of stars to collect\r\n            this.stars.children.iterate(function (child) {\r\n\r\n                child.enableBody(true, child.x, 0, true, true);\r\n\r\n            });\r\n\r\n            var x = (this.player.x < 400) ? Phaser.Math.Between(400, 800) : Phaser.Math.Between(0, 400);\r\n\r\n            var bomb = this.bombs.create(x, 16, 'bomb');\r\n            bomb.setBounce(1);\r\n            bomb.setCollideWorldBounds(true);\r\n            bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\r\n            bomb.allowGravity = false;\r\n\r\n        }\r\n    }\r\n\r\n    hitBomb (player, bomb) {\r\n        this.gameIsOver();\r\n    }\r\n\r\n    gameIsOver () {\r\n        this.gameOverIcon.setVisible(true);\r\n\r\n        this.physics.pause();\r\n        this.player.setTint(0xff0000);\r\n        this.player.anims.play('turn');\r\n\r\n        this.gameOver = true;\r\n    }\r\n\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport {LoadScene} from \"./scenes/LoadScene.js\";\r\nimport {MenuScene} from \"./scenes/MenuScene.js\";\r\nimport {Level1Scene} from \"./scenes/Level1Scene.js\";\r\n\r\nconst roundHalf = num => Math.round(num * 2) / 2;\r\n\r\nconst graphicsSettings = { best: 1, medium: 0.75, low: 0.5 };\r\nconst DPR = window.devicePixelRatio * graphicsSettings.best;\r\nconst { width, height } = window.screen;\r\n\r\n// Set width and height.\r\nconst WIDTH = Math.round(Math.max(width, height) * DPR);\r\nconst HEIGHT = Math.round(Math.min(width, height) * DPR);\r\n\r\nexport const assetsDPR = roundHalf(Math.min(Math.max(HEIGHT / 360, 1), 4))\r\n\r\nconsole.log('DPR = ', DPR)\r\nconsole.log('assetsDPR = ', assetsDPR)\r\nconsole.log('WIDTH = ', WIDTH)\r\nconsole.log('HEIGHT = ', HEIGHT)\r\n\r\nlet config = {\r\n    type: Phaser.AUTO,\r\n    scale: {\r\n        parent: 'phaser-game',\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        width: WIDTH,\r\n        height: HEIGHT\r\n      },\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            gravity: { y: 300 },\r\n            debug: false\r\n        }\r\n    },\r\n    scene: [\r\n        LoadScene, MenuScene, Level1Scene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}