{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/scenes/Level1Scene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","LEVEL1","LoadScene","key","load","image","spritesheet","frameWidth","frameHeight","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","scene","start","Phaser","Scene","MenuScene","playIcon","sprite","setVisible","playButton","setInteractive","Level1Scene","levelWidth","player","stars","bombs","platforms","cursors","score","gameOver","scoreText","gameOverIcon","gameOverTimer","escKey","lastInput","waitForInputRelease","i","cameras","main","setBounds","physics","world","staticGroup","create","setBounceX","setBounceY","setCollideWorldBounds","startFollow","anims","frames","generateFrameNumbers","end","frameRate","repeat","frame","input","keyboard","createCursorKeys","group","setXY","x","y","stepX","children","iterate","child","Math","FloatBetween","text","fontSize","fill","collider","overlap","collectStar","hitBomb","addKey","Input","Keyboard","KeyCodes","ESC","isDown","gameIsOver","activePointer","position","setVelocityX","play","body","touching","down","setVelocityY","star","disableBody","setText","countActive","enableBody","Between","bomb","setBounce","setVelocity","allowGravity","pause","setTint","config","type","AUTO","default","arcade","gravity","debug","Game"],"mappings":";;AIEA;;AACA;;AJHO,AIIP,IJJaA,GAAG,GAAG;AACfC,AGDJ,AFAA,ACAA,EFCIA,MAAM,EAAE;AACJC,AIFR,IJEQA,IAAI,EAAE,MADF;AAEJC,AIGR,IJHQA,AIGJgH,IJHQ,EAAE,AIGJ,GAAG,GJLD;AAGJ/G,AIGJgH,EAAAA,EJHIhH,EIGA,EAAEsB,EJHI,EAAE,EIGA,CAAC2F,IADJ;AJLD,AIOR9F,EAAAA,KAAK,EAAE,IAFE;AJNM,AISfD,CJTG,CISHA,MAAM,EAAE,GAHC;AAIT+B,EAAAA,OAAO,EAAE;AACLiE,IAAAA,OAAO,EAAE,QADJ;AAELC,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE;AAAE9C,QAAAA,CAAC,EAAE;AAAL,OADL;AAEJ+C,MAAAA,KAAK,EAAE;AAFH;AAFH,GAJA;AAWTjG,EAAAA,KAAK,EAAE,CACHnB,oBADG,EACQuB,oBADR,EACmBM,wBADnB;AAXE,CAAb;AAgBA,IAAId,IAAI,GAAG,IAAIM,MAAM,CAACgG,IAAX,CAAgBP,MAAhB,CAAX;;;;;;;IDpBajF,AFAA7B,ACAAuB;;;;;ACET,AFDA,ACCA,uBDDc,ACCA,ECAA;AAAA,AFDA,ACCA;;ACAA,AFDA,ACCA,6BDAJ,ACCA;ADAFtB,ACCAA,MDDAA,ACCAA,GDDG,ACCA,EDDEN,ACCAA,SDDIC,ACCAA,MDDJ,ACCA,CDDWC,ACCAC;ACDpB,AFDM,ACCA,KDFI,ACCA,yBCCJ;AACFG,AFCP,ACCA,MCFOA,GAAG,EAAEN,SAAIC,MAAJ,CAAWG;AADd,KAAN;AAIA,UAAK+B,UAAL,GAAkB,EAAlB;AAEA,UAAKC,MAAL;AACA,UAAKC,KAAL,YFHG,CAEN,ECDU,CAEV;ACCG,UAAKC,KAAL;AACA,UAAKC,SAAL;AACA,UAAKC,OAAL,YDDM,CDDA;AEGN,AFHM,ACCA,UCEDC,KAAL,GAAa,CAAb;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,AFJA,ACCA,UCGKC,CFJApC,IAAL,CAAUC,GEIV,EFJA,CAAgB,KAAhB,EAAuB,kBAAvB;AEKA,AFJA,ACCA,UCGKoC,CFJArC,ACCAM,GAAL,CDDA,ACCSL,CDDCA,ICCV,CDDA,ACCe,CCGf,AFJgB,ECChB,EAAoB,GAApB,CDDA,CCCyB,CDDC,ICC1B,iBDDA;AEKA,AFJA,ACCA,UCGKqC,CFJAtC,ACCAM,GAAL,CDDA,ACCSL,CDDCA,ICCV,CDDA,ACCe,CDDC,CEIhB,ADHA,EAAmB,CCGE,CAArB,ADHA,EAAuB,GDDvB,EAA4B,CCC5B,EAHM,CAG0B,mBDDhC;AEKA,AFJA,UEIKsC,CFJAvC,IAAL,CEIA,AFJUC,KAAV,CAAgB,MAAhB,EAAwB,mBAAxB;AEMA,AFLA,ACAA,UCKKuC,CFLAxC,ACAAM,GAAL,CDAA,ACASL,CDACA,GEKV,CDLA,CDAA,ACAe,CCKE,AFLD,CEKhB,ADLA,EAAmB,EAAnB,CDAA,CCAuB,CDAC,KCAxB,EAJM,CAI0B,WDAhC;AEMA,AFJA,UEIKwC,CFJAzC,IAAL,CAAUC,KAAV,CAAgB,OEIhB,GAA2B,GFJ3B,EEIA,AFJ+B,0BAA/B;AEhBU,AFiBV,ACDA,UAAIqB,CDCCtB,IAAL,CAAUC,ECDE,GDCZ,ACDe,CDCC,ICDIK,GAAL,CAASiB,GDCxB,EAA6B,CCDd,CAAgB,GAAhB,EAAqB,GAArB,EAA0B,WAA1B,CDCf,ACDA;ACKH,AFHG,ACDAD,MAAAA,KDCKtB,GCDG,CDCR,ACDSwB,CDCCvB,KAAV,CAAgB,GCDhB,CAAoB,KAApB,EDCA,ACRM,CASN,CDD6B,wBAA7B;AAEA,WAAKD,IAAL,CAAUE,WAAV,CAAsB,MAAtB,EAA8B,oBAA9B,EAAoD;AAAEC,ACAtD,QDAsDA,ECAlDsB,QDA4D,EAAE,ACApD,EDAsC,CCAnC,KAAKnB,GAAL,CAASL,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB,aAAzB,CAAjB;ADAsEG,ACEtEqB,MAAAA,EDFsErB,QCE5D,CAACsB,EDFsE,EAAE,UCEnF;ADFoD,ACIpDD,MAAAA,CDJA,SCIU,CAACf,EAAX,CAAc,UCDP,CAEV,ADDG,EAA2B,YAAM;ADFjC,ACGI,QAAA,EDHAL,GCGI,CAACY,KAAL,CDHU,ACGCC,GDHE,ECGb,CAAiBzB,EDHCa,GAAL,CAASC,GCGDb,KDHR,CAAkB,ACGd,CAAWG,MAA5B;ADFAW,ACGH,OAFD,CDDIA,SAAS,EAAE;AACPC,ACIRgB,MAAAA,IDJQhB,KAAK,CCIH,CDJK,ACIJC,EAAX,CAAc,KDLC,CACS,GEGlB,IDCN,EAA6B,YAAM;ACAnC,ADCIY,QAAAA,GCDA,IAAIoB,CAAC,ADCG,CAAClB,ECDD,CAAZ,EAAekB,CAAC,GAAG,CDCf,CAAoB,GCDAd,CDCpB,SCDJ,EAAoCc,CAAC,EAArC,EAAyC;AACrC,AFNW,ACOd,OAFD,MCCSpC,GAAL,CAASL,KAAT,CAAe,MAAO,OAAOyC,CAA7B,EAAiC,GAAjC,EAAqC,KAArC;AACH,AFRkC,ACUnCjB,MAAAA,CDViB,CAAjB,CAbM,CAmBN,MCIU,CAACf,EAAX,CAAc,YAAd,EAA4B,YAAM;ADHlC,ACIIY,QAAAA,QAAQ,CAACE,UAAT,CAAoB,KAApB;ACDJ,AFFA,ACIC,OAFD,ICAKmB,OAAL,CAAaC,IAAb,CAAkBC,SAAlB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,OAAO,KAAKjB,UAA9C,EAA0D,GAA1D;AACA,AFFA,ACKH,WCHQkB,OAAL,CAAaC,KAAb,CAAmBF,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,OAAO,KAAKjB,UAA/C,EAA2D,GAA3D,EANM,CAQN;;AACA,AFHA,WEGKI,AFHAhC,IAAL,CAAUU,EAAV,CAAa,CEGb,GAAiB,KAAKoC,CFHtB,EAAyB,IEGR,CAAaxC,GAAb,CAAiB0C,CFHRrC,OAAD,EAAa,CEGrB,EAAjB;AFFIN,QAAAA,UAAU,CAACO,QAAX,CAAoB,CAApB,ACIE,CAET,CDN8B,KAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,MAAnB,GAA4B,CAAnD,EAAsD,KAAI,CAACF,IAAL,CAAUC,QAAV,CAAmBE,KAAnB,GAA2BL,OAAjF,EAA0F,EAA1F;AEIJ,AFHC,OAFD,IEKI,IAAI+B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKd,UAAxB,EAAoCc,CAAC,EAArC,EAAyC;AACrC,AFHP,aEGYV,SAAL,CAAeiB,MAAf,CAAsB,MAAO,OAAOP,CAApC,EAAwC,GAAxC,EAA6C,QAA7C;AACH,OAbK,CAeN;ED5CuBvB,MAAM,CAACC;6BDwCzB;AEKL,AFJA,WEIKY,AFJAf,KAAL,CAAWC,GEIX,CAAe+B,CFJf,CAAiBxD,IEIjB,CAAsB,GAAtB,CFJqBC,CEIM,GAA3B,EAAgC,AFJf,CAAWE,IAA5B,KEIA;AACA,AFJH,WEIQoC,SAAL,CAAeiB,MAAf,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B,UAA/B;AACA,WAAKjB,SAAL,CAAeiB,MAAf,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC,UAAhC,EAlBM,CAoBN;;AACA,WAAKpB,MAAL,GAAc,KAAKiB,OAAL,CAAaxC,GAAb,CAAiBiB,MAAjB,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,MAAlC,CAAd,CArBM,CAuBN;EFpDuBJ,MAAM,CAACC;AEqD9B,WAAKS,MAAL,CAAYqB,UAAZ,CAAuB,CAAvB;AACA,WAAKrB,MAAL,CAAYsB,UAAZ,CAAuB,GAAvB;AACA,WAAKtB,MAAL,CAAYuB,qBAAZ,CAAkC,IAAlC,EA1BM,CA4BN;;AACA,WAAKT,OAAL,CAAaC,IAAb,CAAkBS,WAAlB,CAA8B,KAAKxB,MAAnC,EAA2C,KAA3C,EAAkD,CAAlD,EAAqD,CAArD,EA7BM,CA+BN;;AACA,WAAKyB,KAAL,CAAWL,MAAX,CAAkB;AACdlD,QAAAA,GAAG,EAAE,MADS;AAEdwD,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,oBAAX,CAAgC,MAAhC,EAAwC;AAAEtC,UAAAA,KAAK,EAAE,CAAT;AAAYuC,UAAAA,GAAG,EAAE;AAAjB,SAAxC,CAFM;AAGdC,QAAAA,SAAS,EAAE,EAHG;AAIdC,QAAAA,MAAM,EAAE,CAAC;AAJK,OAAlB;AAOA,WAAKL,KAAL,CAAWL,MAAX,CAAkB;AACdlD,QAAAA,GAAG,EAAE,MADS;AAEdwD,QAAAA,MAAM,EAAE,CAAE;AAAExD,UAAAA,GAAG,EAAE,MAAP;AAAe6D,UAAAA,KAAK,EAAE;AAAtB,SAAF,CAFM;AAGdF,QAAAA,SAAS,EAAE;AAHG,OAAlB;AAMA,WAAKJ,KAAL,CAAWL,MAAX,CAAkB;AACdlD,QAAAA,GAAG,EAAE,OADS;AAEdwD,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,oBAAX,CAAgC,MAAhC,EAAwC;AAAEtC,UAAAA,KAAK,EAAE,CAAT;AAAYuC,UAAAA,GAAG,EAAE;AAAjB,SAAxC,CAFM;AAGdC,QAAAA,SAAS,EAAE,EAHG;AAIdC,QAAAA,MAAM,EAAE,CAAC;AAJK,OAAlB,EA7CM,CAoDN;;AACA,WAAK1B,OAAL,GAAe,KAAK4B,KAAL,CAAWC,QAAX,CAAoBC,gBAApB,EAAf,CArDM,CAuDN;;AACA,WAAKjC,KAAL,GAAa,KAAKgB,OAAL,CAAaxC,GAAb,CAAiB0D,KAAjB,CAAuB;AAChCjE,QAAAA,GAAG,EAAE,MAD2B;AAEhC4D,QAAAA,MAAM,EAAE,EAFwB;AAGhCM,QAAAA,KAAK,EAAE;AAAEC,UAAAA,CAAC,EAAE,EAAL;AAASC,UAAAA,CAAC,EAAE,CAAZ;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AAHyB,OAAvB,CAAb;AAMA,WAAKtC,KAAL,CAAWuC,QAAX,CAAoBC,OAApB,CAA4B,UAAUC,KAAV,EAAiB;AAEzC;AACAA,QAAAA,KAAK,CAACpB,UAAN,CAAiBhC,MAAM,CAACqD,IAAP,CAAYC,YAAZ,CAAyB,GAAzB,EAA8B,GAA9B,CAAjB;AAEH,OALD;AAOA,WAAK1C,KAAL,GAAa,KAAKe,OAAL,CAAaxC,GAAb,CAAiB0D,KAAjB,EAAb,CArEM,CAuEN;;AACA,WAAK5B,SAAL,GAAiB,KAAK9B,GAAL,CAASoE,IAAT,CAAc,EAAd,EAAkB,EAAlB,EAAsB,UAAtB,EAAkC;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,IAAI,EAAE;AAA1B,OAAlC,CAAjB,CAxEM,CA0EN;;AACA,WAAK9B,OAAL,CAAaxC,GAAb,CAAiBuE,QAAjB,CAA0B,KAAKhD,MAA/B,EAAuC,KAAKG,SAA5C;AACA,WAAKc,OAAL,CAAaxC,GAAb,CAAiBuE,QAAjB,CAA0B,KAAK/C,KAA/B,EAAsC,KAAKE,SAA3C;AACA,WAAKc,OAAL,CAAaxC,GAAb,CAAiBuE,QAAjB,CAA0B,KAAK9C,KAA/B,EAAsC,KAAKC,SAA3C,EA7EM,CA+EN;;AACA,WAAKc,OAAL,CAAaxC,GAAb,CAAiBwE,OAAjB,CAAyB,KAAKjD,MAA9B,EAAsC,KAAKC,KAA3C,EAAkD,KAAKiD,WAAvD,EAAoE,IAApE,EAA0E,IAA1E;AAEA,WAAKjC,OAAL,CAAaxC,GAAb,CAAiBuE,QAAjB,CAA0B,KAAKhD,MAA/B,EAAuC,KAAKE,KAA5C,EAAmD,KAAKiD,OAAxD,EAAiE,IAAjE,EAAuE,IAAvE;AAEA,WAAK3C,YAAL,GAAoB,KAAKS,OAAL,CAAaxC,GAAb,CAAiBiB,MAAjB,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,WAAlC,CAApB;AACA,WAAKc,YAAL,CAAkBb,UAAlB,CAA6B,KAA7B;AACA,WAAKW,QAAL,GAAgB,KAAhB;AAEA,WAAKI,MAAL,GAAc,KAAKsB,KAAL,CAAWC,QAAX,CAAoBmB,MAApB,CAA2B9D,MAAM,CAAC+D,KAAP,CAAaC,QAAb,CAAsBC,QAAtB,CAA+BC,GAA1D,CAAd;AACH;;;6BAES;AACN,UAAI,KAAK9C,MAAL,CAAY+C,MAAhB,EAAwB;AACpB,aAAKC,UAAL;AACH;;AACD,UAAI,KAAKpD,QAAT,EAAmB;AACf,aAAKG,aAAL;;AACA,YAAI,KAAKA,aAAL,GAAqB,GAAzB,EAA8B;AAC1B,eAAKrB,KAAL,CAAWC,KAAX,CAAiBzB,SAAIC,MAAJ,CAAWE,IAA5B;AACH;;AACD;AACH,OAND,MAMO;AACH,aAAK0C,aAAL,GAAqB,CAArB;AACH;AAED;;;;;;;;;;;;;;AAaA,UAAI,KAAKuB,KAAL,CAAW2B,aAAX,CAAyBF,MAAzB,IAAoC,KAAKzB,KAAL,CAAW2B,aAAX,CAAyBC,QAAzB,CAAkCvB,CAAlC,GAAsC,EAA1E,IAAkF,CAAC,KAAKzB,mBAA5F,EAAkH;AAC9G,YAAI,KAAKD,SAAL,IAAkB,CAAtB,EAAyB;AACrB,eAAKX,MAAL,CAAY6D,YAAZ,CAAyB,CAAC,GAA1B;AACA,eAAK7D,MAAL,CAAYyB,KAAZ,CAAkBqC,IAAlB,CAAuB,MAAvB,EAA+B,IAA/B;AACH,SAHD,MAGO,IAAI,KAAKnD,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,cAAI,KAAKX,MAAL,CAAY+D,IAAZ,CAAiBC,QAAjB,CAA0BC,IAA9B,EAAoC;AAChC,iBAAKjE,MAAL,CAAYkE,YAAZ,CAAyB,CAAC,GAA1B;AACH;AACJ;;AACD,aAAKvD,SAAL,GAAiB,CAAjB;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AAEH,OAZD,MAYO,IAAI,KAAKoB,KAAL,CAAW2B,aAAX,CAAyBF,MAAzB,IAAoC,KAAKzB,KAAL,CAAW2B,aAAX,CAAyBC,QAAzB,CAAkCvB,CAAlC,GAAsC,IAA1E,IAAoF,CAAC,KAAKzB,mBAA9F,EAAoH;AACvH,YAAI,KAAKD,SAAL,IAAkB,CAAtB,EAAyB;AACrB,eAAKX,MAAL,CAAY6D,YAAZ,CAAyB,GAAzB;AACA,eAAK7D,MAAL,CAAYyB,KAAZ,CAAkBqC,IAAlB,CAAuB,OAAvB,EAAgC,IAAhC;AACH,SAHD,MAGO,IAAI,KAAKnD,SAAL,IAAkB,CAAtB,EAAyB;AAC5B,cAAI,KAAKX,MAAL,CAAY+D,IAAZ,CAAiBC,QAAjB,CAA0BC,IAA9B,EAAoC;AAChC,iBAAKjE,MAAL,CAAYkE,YAAZ,CAAyB,CAAC,GAA1B;AACH;AACJ;;AACD,aAAKvD,SAAL,GAAiB,CAAjB;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACH,OAXM,MAWA,CACH;AACA;AACH;;AAED,UAAI,CAAC,KAAKoB,KAAL,CAAW2B,aAAX,CAAyBF,MAA9B,EAAsC;AAClC,aAAK7C,mBAAL,GAA2B,KAA3B;AACH;AACJ;;;gCAEYZ,QAAQmE,MAAM;AACvBA,MAAAA,IAAI,CAACC,WAAL,CAAiB,IAAjB,EAAuB,IAAvB,EADuB,CAGvB;;AACA,WAAK/D,KAAL,IAAc,EAAd;AACA,WAAKE,SAAL,CAAe8D,OAAf,CAAuB,YAAY,KAAKhE,KAAxC;;AAEA,UAAI,KAAKJ,KAAL,CAAWqE,WAAX,CAAuB,IAAvB,MAAiC,CAArC,EAAwC;AACpC;AACA,aAAKrE,KAAL,CAAWuC,QAAX,CAAoBC,OAApB,CAA4B,UAAUC,KAAV,EAAiB;AAEzCA,UAAAA,KAAK,CAAC6B,UAAN,CAAiB,IAAjB,EAAuB7B,KAAK,CAACL,CAA7B,EAAgC,CAAhC,EAAmC,IAAnC,EAAyC,IAAzC;AAEH,SAJD;AAMA,YAAIA,CAAC,GAAI,KAAKrC,MAAL,CAAYqC,CAAZ,GAAgB,GAAjB,GAAwB/C,MAAM,CAACqD,IAAP,CAAY6B,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,CAAxB,GAAwDlF,MAAM,CAACqD,IAAP,CAAY6B,OAAZ,CAAoB,CAApB,EAAuB,GAAvB,CAAhE;AAEA,YAAIC,IAAI,GAAG,KAAKvE,KAAL,CAAWkB,MAAX,CAAkBiB,CAAlB,EAAqB,EAArB,EAAyB,MAAzB,CAAX;AACAoC,QAAAA,IAAI,CAACC,SAAL,CAAe,CAAf;AACAD,QAAAA,IAAI,CAAClD,qBAAL,CAA2B,IAA3B;AACAkD,QAAAA,IAAI,CAACE,WAAL,CAAiBrF,MAAM,CAACqD,IAAP,CAAY6B,OAAZ,CAAoB,CAAC,GAArB,EAA0B,GAA1B,CAAjB,EAAiD,EAAjD;AACAC,QAAAA,IAAI,CAACG,YAAL,GAAoB,KAApB;AAEH;AACJ;;;4BAEQ5E,QAAQyE,MAAM;AACnB,WAAKf,UAAL;AACH;;;iCAEa;AACV,WAAKlD,YAAL,CAAkBb,UAAlB,CAA6B,IAA7B;AAEA,WAAKsB,OAAL,CAAa4D,KAAb;AACA,WAAK7E,MAAL,CAAY8E,OAAZ,CAAoB,QAApB;AACA,WAAK9E,MAAL,CAAYyB,KAAZ,CAAkBqC,IAAlB,CAAuB,MAAvB;AAEA,WAAKxD,QAAL,GAAgB,IAAhB;AACH;;;;EA1N4BhB,MAAM,CAACC","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        LEVEL1: \"LEVEL1\"\r\n    }\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        });\r\n    }\r\n\r\n    init() {\r\n        \r\n    }\r\n\r\n    preload() {\r\n        this.load.image('sky', './assets/sky.png');\r\n        this.load.image('ground', './assets/ground.png');\r\n        this.load.image('platform', './assets/platform.png');\r\n        this.load.image('star', './assets/star.png');\r\n        this.load.image('bomb', './assets/bomb.png');\r\n\r\n        this.load.image('play_button', './assets/play_button.png');\r\n        this.load.image('play_icon', './assets/play_icon.png');\r\n        this.load.image('game_over', './assets/game_over.png');\r\n\r\n        this.load.spritesheet('dude', '../assets/dude.png', { frameWidth: 32, frameHeight: 48 });\r\n        \r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // white\r\n            }\r\n        });\r\n\r\n        // simulate large load: TODO: remove\r\n        //for(let i = 0; i < 100; i++) {\r\n        //    this.load.image('star' + i, './src/assets/star.png');\r\n        //}\r\n        \r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n        });\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        });\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        //  A simple background for our game\r\n        this.add.image(640, 360, 'sky');\r\n        this.add.image(32, 32, 'star'); // logo\r\n        this.add.image(64, 32, 'star'); // logo\r\n\r\n        let playIcon = this.add.sprite(300, 400, 'play_icon');\r\n        playIcon.setVisible(false);\r\n\r\n        // use as play button...\r\n        let playButton = this.add.image(400, 400, 'play_button');\r\n\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            this.scene.start(CST.SCENES.LEVEL1);\r\n        });\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            playIcon.setVisible(true);\r\n        });\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            playIcon.setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    update () {\r\n        \r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class Level1Scene extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LEVEL1\r\n        });\r\n\r\n        this.levelWidth = 10;\r\n\r\n        this.player;\r\n        this.stars;\r\n        this.bombs;\r\n        this.platforms;\r\n        this.cursors;\r\n        this.score = 0;\r\n        this.gameOver = false;\r\n        this.scoreText;\r\n        this.gameOverIcon;\r\n        this.gameOverTimer = 0;\r\n        this.escKey;\r\n\r\n        this.lastInput = 0;\r\n        this.waitForInputRelease = false;\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.add.image(640 + (1280 * i), 360,\"sky\");\r\n        }\r\n        \r\n        this.cameras.main.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n        this.physics.world.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n\r\n        //  The platforms group contains the ground and the 2 ledges we can jump on\r\n        this.platforms = this.physics.add.staticGroup();\r\n\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.platforms.create(640 + (1280 * i), 704, \"ground\");\r\n        }\r\n        \r\n        //  Now let's create some ledges\r\n        this.platforms.create(600, 400, 'platform');\r\n        this.platforms.create(50, 250, 'platform');\r\n        this.platforms.create(750, 220, 'platform');\r\n\r\n        // The player and its settings\r\n        this.player = this.physics.add.sprite(100, 450, 'dude');\r\n        \r\n        //  Player physics properties. Give the little guy a slight bounce.\r\n        this.player.setBounceX(0);\r\n        this.player.setBounceY(0.2);\r\n        this.player.setCollideWorldBounds(true);\r\n\r\n        //this.cameras.main.startFollow(this.player, true, 0.05, 0.05);\r\n        this.cameras.main.startFollow(this.player, false, 1, 0);\r\n\r\n        //  Our player animations, turning, walking left and walking right.\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'turn',\r\n            frames: [ { key: 'dude', frame: 4 } ],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        //  Input Events\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        //  Some stars to collect, 12 in total, evenly spaced 70 pixels apart along the x axis\r\n        this.stars = this.physics.add.group({\r\n            key: 'star',\r\n            repeat: 11,\r\n            setXY: { x: 12, y: 0, stepX: 70 }\r\n        });\r\n\r\n        this.stars.children.iterate(function (child) {\r\n\r\n            //  Give each star a slightly different bounce\r\n            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\r\n\r\n        });\r\n\r\n        this.bombs = this.physics.add.group();\r\n\r\n        //  The score\r\n        this.scoreText = this.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });\r\n\r\n        //  Collide the player and the stars with the platforms\r\n        this.physics.add.collider(this.player, this.platforms);\r\n        this.physics.add.collider(this.stars, this.platforms);\r\n        this.physics.add.collider(this.bombs, this.platforms);\r\n\r\n        //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function\r\n        this.physics.add.overlap(this.player, this.stars, this.collectStar, null, this);\r\n\r\n        this.physics.add.collider(this.player, this.bombs, this.hitBomb, null, this);\r\n\r\n        this.gameOverIcon = this.physics.add.sprite(300, 300, 'game_over');\r\n        this.gameOverIcon.setVisible(false);\r\n        this.gameOver = false;\r\n\r\n        this.escKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);\r\n    }\r\n\r\n    update () {\r\n        if (this.escKey.isDown) {\r\n            this.gameIsOver();\r\n        }\r\n        if (this.gameOver) {\r\n            this.gameOverTimer++;\r\n            if (this.gameOverTimer > 150) {\r\n                this.scene.start(CST.SCENES.MENU);\r\n            }\r\n            return;\r\n        } else {\r\n            this.gameOverTimer = 0;\r\n        }\r\n\r\n        /* if (this.cursors.left.isDown) {\r\n            this.player.setVelocityX(-160);\r\n            this.player.anims.play('left', true);\r\n        }\r\n        else if (this.cursors.right.isDown) {\r\n            this.player.setVelocityX(160);\r\n            this.player.anims.play('right', true);\r\n        }\r\n        else {\r\n            this.player.setVelocityX(0);\r\n            this.player.anims.play('turn');\r\n        } */\r\n        \r\n        if (this.input.activePointer.isDown && (this.input.activePointer.position.x < 50) && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 1) {\r\n                this.player.setVelocityX(-160);\r\n                this.player.anims.play('left', true);\r\n            } else if (this.lastInput == 1) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 1;\r\n            this.waitForInputRelease = true;\r\n            \r\n        } else if (this.input.activePointer.isDown && (this.input.activePointer.position.x > 1230) && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 2) {\r\n                this.player.setVelocityX(160);\r\n                this.player.anims.play('right', true);\r\n            } else if (this.lastInput == 2) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 2;\r\n            this.waitForInputRelease = true;\r\n        } else {\r\n            //this.player.setVelocityX(0);\r\n            //this.player.anims.play('turn');\r\n        }\r\n\r\n        if (!this.input.activePointer.isDown) {\r\n            this.waitForInputRelease = false;\r\n        }\r\n    }\r\n\r\n    collectStar (player, star) {\r\n        star.disableBody(true, true);\r\n\r\n        //  Add and update the score\r\n        this.score += 10;\r\n        this.scoreText.setText('Score: ' + this.score);\r\n\r\n        if (this.stars.countActive(true) === 0) {\r\n            //  A new batch of stars to collect\r\n            this.stars.children.iterate(function (child) {\r\n\r\n                child.enableBody(true, child.x, 0, true, true);\r\n\r\n            });\r\n\r\n            var x = (this.player.x < 400) ? Phaser.Math.Between(400, 800) : Phaser.Math.Between(0, 400);\r\n\r\n            var bomb = this.bombs.create(x, 16, 'bomb');\r\n            bomb.setBounce(1);\r\n            bomb.setCollideWorldBounds(true);\r\n            bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\r\n            bomb.allowGravity = false;\r\n\r\n        }\r\n    }\r\n\r\n    hitBomb (player, bomb) {\r\n        this.gameIsOver();\r\n    }\r\n\r\n    gameIsOver () {\r\n        this.gameOverIcon.setVisible(true);\r\n\r\n        this.physics.pause();\r\n        this.player.setTint(0xff0000);\r\n        this.player.anims.play('turn');\r\n\r\n        this.gameOver = true;\r\n    }\r\n\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport {LoadScene} from \"./scenes/LoadScene.js\";\r\nimport {MenuScene} from \"./scenes/MenuScene.js\";\r\nimport {Level1Scene} from \"./scenes/Level1Scene.js\";\r\n\r\nlet config = {\r\n    type: Phaser.AUTO,\r\n    width: 1280,\r\n    height: 720,\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            gravity: { y: 300 },\r\n            debug: false\r\n        }\r\n    },\r\n    scene: [\r\n        LoadScene, MenuScene, Level1Scene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}