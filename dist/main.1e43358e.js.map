{"version":3,"sources":["src/CST.js","src/scenes/LoadScene.js","src/scenes/MenuScene.js","src/scenes/AbstractLevelScene.js","src/scenes/Level1Scene.js","src/main.js"],"names":["CST","SCENES","LOAD","MENU","LEVEL1","Scene","LoadScene","Phaser","key","load","image","tilemapCSV","spritesheet","frameWidth","frameHeight","loadingBar","add","graphics","fillStyle","color","on","percent","fillRect","game","renderer","height","width","scene","start","MenuScene","playIcon","sprite","setVisible","playButton","setInteractive","AbstractLevelScene","levelname","levelWidth","gameOver","gameOverIcon","gameOverTimer","escKey","player","beers","sausages","bombs","platforms","cursors","lastInput","waitForInputRelease","collectedSausages","collectedBeers","collectedBeersScoreText","collectedSausagesScoreText","i","cameras","main","setBounds","physics","world","staticGroup","create","setBounceX","setBounceY","setCollideWorldBounds","startFollow","anims","frames","generateFrameNumbers","end","frameRate","repeat","frame","text","fontSize","fill","input","keyboard","createCursorKeys","addKey","Input","Keyboard","KeyCodes","ESC","collider","overlap","collectBeer","collectSausage","isDown","gameIsOver","leftClick","activePointer","position","x","left","rightClick","right","setVelocityX","play","body","touching","down","setVelocityY","beer","disableBody","setText","sausage","bomb","pause","setTint","Level1Scene","map","make","tilemap","tileWidth","tileHeight","setCollision","tileset","addTilesetImage","layer","createStaticLayer","group","setXY","y","stepX","children","iterate","child","Math","FloatBetween","afterCreate","roundHalf","num","round","graphicsSettings","best","medium","low","DPR","window","devicePixelRatio","screen","WIDTH","max","HEIGHT","min","assetsDPR","console","log","config","type","AUTO","scale","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","default","arcade","gravity","debug","Game"],"mappings":"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","file":"main.1e43358e.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        LEVEL1: \"LEVEL1\"\r\n    }\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        });\r\n    }\r\n\r\n    init() {\r\n        \r\n    }\r\n\r\n    preload() {\r\n        this.load.image('sky', './assets/sky.png');\r\n        this.load.image('ground', './assets/ground.png');\r\n        this.load.image('platform', './assets/platform.png');\r\n        this.load.image('star', './assets/star.png');\r\n        this.load.image('bomb', './assets/bomb.png');\r\n        this.load.image('beer', './assets/beer.png');\r\n        this.load.image('sausage', './assets/sausage.png');\r\n\r\n        this.load.image('play_button', './assets/play_button.png');\r\n        this.load.image('play_icon', './assets/play_icon.png');\r\n        this.load.image('game_over', './assets/game_over.png');\r\n\r\n        this.load.tilemapCSV('Level2', './assets/Level2.csv');\r\n        this.load.image('tiles', './assets/tiles_spritesheet.png');\r\n\r\n        this.load.spritesheet('dude', '../assets/dude.png', { frameWidth: 32, frameHeight: 48 });\r\n        \r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff // white\r\n            }\r\n        });\r\n\r\n        // simulate large load: TODO: remove\r\n        //for(let i = 0; i < 100; i++) {\r\n        //    this.load.image('star' + i, './src/assets/star.png');\r\n        //}\r\n        \r\n        this.load.on(\"progress\", (percent) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height / 2, this.game.renderer.width * percent, 50);\r\n        });\r\n    }\r\n\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class MenuScene extends Phaser.Scene {\r\n    \r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        });\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        //  A simple background for our game\r\n        this.add.image(640, 360, 'sky');\r\n        this.add.image(32, 32, 'star'); // logo\r\n        this.add.image(64, 32, 'star'); // logo\r\n\r\n        let playIcon = this.add.sprite(300, 400, 'play_icon');\r\n        playIcon.setVisible(false);\r\n\r\n        // use as play button...\r\n        let playButton = this.add.image(400, 400, 'play_button');\r\n\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerup\", () => {\r\n            this.scene.start(CST.SCENES.LEVEL1);\r\n        });\r\n\r\n        playButton.on(\"pointerover\", () => {\r\n            playIcon.setVisible(true);\r\n        });\r\n\r\n        playButton.on(\"pointerout\", () => {\r\n            playIcon.setVisible(false);\r\n        });\r\n\r\n    }\r\n\r\n    update () {\r\n        \r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\n\r\nexport class AbstractLevelScene extends Phaser.Scene {\r\n    \r\n    constructor(levelname) {\r\n        super({\r\n            key: levelname\r\n        });\r\n\r\n        this.levelWidth = 10;\r\n\r\n        this.gameOver = false;\r\n        this.gameOverIcon;\r\n        this.gameOverTimer = 0;\r\n\r\n        this.escKey;\r\n\r\n        this.player;\r\n        this.beers;\r\n        this.sausages;\r\n        this.bombs;\r\n        this.platforms;\r\n        this.cursors;\r\n        \r\n        this.lastInput = 0;\r\n        this.waitForInputRelease = false;\r\n\r\n        this.collectedSausages = 0;\r\n        this.collectedBeers = 0;\r\n\r\n        this.collectedBeersScoreText = \"\";\r\n        this.collectedSausagesScoreText = \"\";\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.add.image(640 + (1280 * i), 360,\"sky\");\r\n        }\r\n        \r\n        this.cameras.main.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n        this.physics.world.setBounds(0, 0, 1280 * this.levelWidth, 720);\r\n\r\n        //  The platforms group contains the ground and the 2 ledges we can jump on\r\n        this.platforms = this.physics.add.staticGroup();\r\n\r\n        for(var i = 0; i < this.levelWidth; i++) {\r\n            this.platforms.create(640 + (1280 * i), 704, \"ground\");\r\n        }\r\n        \r\n        // The player and its settings\r\n        this.player = this.physics.add.sprite(100, 450, 'dude');\r\n        \r\n        //  Player physics properties. Give the little guy a slight bounce.\r\n        this.player.setBounceX(0);\r\n        this.player.setBounceY(0.2);\r\n        this.player.setCollideWorldBounds(true);\r\n\r\n        this.cameras.main.startFollow(this.player, false, 1, 0);\r\n\r\n        //  Our player animations, turning, walking left and walking right.\r\n        this.anims.create({\r\n            key: 'left',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'turn',\r\n            frames: [ { key: 'dude', frame: 4 } ],\r\n            frameRate: 20\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'right',\r\n            frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n        });\r\n\r\n        this.collectedBeersScoreText = this.add.text(16, 16, 'Beers: 0', { fontSize: '32px', fill: '#000' });\r\n        this.collectedSausagesScoreText = this.add.text(16, 48, 'Sausages: 0', { fontSize: '32px', fill: '#000' });\r\n\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n\r\n        this.gameOverIcon = this.physics.add.sprite(300, 300, 'game_over');\r\n        this.gameOverIcon.setVisible(false);\r\n        this.gameOver = false;\r\n\r\n        this.escKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ESC);\r\n    }\r\n\r\n    afterCreate() {\r\n        //  Collide the player and the stars with the platforms\r\n        this.physics.add.collider(this.player, this.platforms);\r\n        this.physics.add.collider(this.beers, this.platforms);\r\n        this.physics.add.collider(this.sausages, this.platforms);\r\n        //this.physics.add.collider(this.bombs, this.platforms);\r\n\r\n        //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function\r\n        this.physics.add.overlap(this.player, this.beers, this.collectBeer, null, this);\r\n        this.physics.add.overlap(this.player, this.sausages, this.collectSausage, null, this);\r\n\r\n        //this.physics.add.collider(this.player, this.bombs, this.hitBomb, null, this);\r\n    }\r\n\r\n    update () {\r\n        if (this.escKey.isDown) {\r\n            this.gameIsOver();\r\n        }\r\n        if (this.gameOver) {\r\n            this.gameOverTimer++;\r\n            if (this.gameOverTimer > 150) {\r\n                this.scene.start(CST.SCENES.MENU);\r\n            }\r\n            return;\r\n        } else {\r\n            this.gameOverTimer = 0;\r\n        }\r\n\r\n        var leftClick = (this.input.activePointer.isDown && (this.input.activePointer.position.x < 100)) || this.cursors.left.isDown;\r\n        var rightClick = (this.input.activePointer.isDown && (this.input.activePointer.position.x > 1180)) || this.cursors.right.isDown;\r\n        \r\n        if (leftClick && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 1) {\r\n                this.player.setVelocityX(-160);\r\n                this.player.anims.play('left', true);\r\n            } else if (this.lastInput == 1) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 1;\r\n            this.waitForInputRelease = true;\r\n            \r\n        } else if (rightClick && (!this.waitForInputRelease)) {\r\n            if (this.lastInput != 2) {\r\n                this.player.setVelocityX(160);\r\n                this.player.anims.play('right', true);\r\n            } else if (this.lastInput == 2) {\r\n                if (this.player.body.touching.down) {\r\n                    this.player.setVelocityY(-330);\r\n                }\r\n            }\r\n            this.lastInput = 2;\r\n            this.waitForInputRelease = true;\r\n        } else {\r\n            //this.player.setVelocityX(0);\r\n            //this.player.anims.play('turn');\r\n        }\r\n\r\n        if (!(leftClick || rightClick)) {\r\n            this.waitForInputRelease = false;\r\n        }\r\n    }\r\n\r\n    collectBeer(player, beer) {\r\n        beer.disableBody(true, true);\r\n        this.collectedBeers++;\r\n        this.collectedBeersScoreText.setText('Beers: ' + this.collectedBeers);\r\n    }\r\n\r\n    collectSausage(player, sausage) {\r\n        sausage.disableBody(true, true);\r\n        this.collectedSausages++;\r\n        this.collectedSausagesScoreText.setText('Sausages: ' + this.collectedSausages);\r\n    }\r\n\r\n    hitBomb(player, bomb) {\r\n        this.gameIsOver();\r\n    }\r\n\r\n    gameIsOver() {\r\n        this.gameOverIcon.setVisible(true);\r\n\r\n        this.physics.pause();\r\n        this.player.setTint(0xff0000);\r\n        this.player.anims.play('turn');\r\n\r\n        this.gameOver = true;\r\n    }\r\n\r\n}","import { CST } from \"../CST.js\"\r\nimport { AbstractLevelScene } from \"./AbstractLevelScene.js\";\r\n\r\nexport class Level1Scene extends AbstractLevelScene {\r\n    \r\n    constructor() {\r\n        super(CST.SCENES.LEVEL1);\r\n    }\r\n\r\n    preload () {\r\n        \r\n    }\r\n\r\n    create () {\r\n        super.create();\r\n\r\n        // this.platforms.create(600, 520, 'platform');\r\n        // this.platforms.create(50, 670, 'platform');\r\n        // this.platforms.create(750, 620, 'platform');\r\n\r\n        var map = this.make.tilemap({\r\n            key: 'Level2',\r\n            tileWidth: 72,\r\n            tileHeight: 72\r\n        });\r\n        map.setCollision([3, 9, 44, 81, 69]);\r\n        var tileset = map.addTilesetImage('tiles');\r\n        this.layer = map.createStaticLayer('layer', tileset);\r\n        this.physics.add.collider(this.player, this.layer);\r\n\r\n        this.beers = this.physics.add.group({\r\n            key: 'beer',\r\n            repeat: 11,\r\n            setXY: { x: 12, y: 0, stepX: 70 }\r\n        });\r\n        this.beers.children.iterate(function (child) {\r\n            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\r\n        });\r\n\r\n        this.sausages = this.physics.add.group({\r\n            key: 'sausage',\r\n            repeat: 5,\r\n            setXY: { x: 35, y: 0, stepX: 70 }\r\n        });\r\n        this.sausages.children.iterate(function (child) {\r\n            child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\r\n        });\r\n\r\n        this.afterCreate();\r\n    }\r\n\r\n    update () {\r\n        super.update();\r\n    }\r\n\r\n}","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport {LoadScene} from \"./scenes/LoadScene.js\";\r\nimport {MenuScene} from \"./scenes/MenuScene.js\";\r\nimport {Level1Scene} from \"./scenes/Level1Scene.js\";\r\n\r\nconst roundHalf = num => Math.round(num * 2) / 2;\r\n\r\nconst graphicsSettings = { best: 1, medium: 0.75, low: 0.5 };\r\nconst DPR = window.devicePixelRatio * graphicsSettings.best;\r\nconst { width, height } = window.screen;\r\n\r\n// Set width and height.\r\nconst WIDTH = Math.round(Math.max(width, height) * DPR);\r\nconst HEIGHT = Math.round(Math.min(width, height) * DPR);\r\n\r\nexport const assetsDPR = roundHalf(Math.min(Math.max(HEIGHT / 360, 1), 4))\r\n\r\nconsole.log('DPR = ', DPR)\r\nconsole.log('assetsDPR = ', assetsDPR)\r\nconsole.log('WIDTH = ', WIDTH)\r\nconsole.log('HEIGHT = ', HEIGHT)\r\n\r\nlet config = {\r\n    type: Phaser.AUTO,\r\n    scale: {\r\n        parent: 'phaser-game',\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter: Phaser.Scale.CENTER_BOTH,\r\n        width: WIDTH,\r\n        height: HEIGHT\r\n      },\r\n    physics: {\r\n        default: 'arcade',\r\n        arcade: {\r\n            gravity: { y: 250 },\r\n            debug: false\r\n        }\r\n    },\r\n    scene: [\r\n        LoadScene, MenuScene, Level1Scene\r\n    ]\r\n};\r\n\r\nlet game = new Phaser.Game(config);"]}